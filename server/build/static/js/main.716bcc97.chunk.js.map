{"version":3,"sources":["file.png","folder.png","cd.gif","analyzeData.js","Playlist.js","PlaylistPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","sortGenres","genres","sortable","g","push","sort","a","b","updateObj","obj","prop","hasOwnProperty","propToArr","n","index","i","result","max","length","Playlist","props","spotifyApi","SpotifyWebApi","allGenres","useState","percent","setPercent","loading","error","genreObj","appState","setAppState","useEffect","addPercent","getTracks","pl","getPlaylistTracks","id","then","response","ids","items","map","song","track","artists","filter","getArtist","name","catch","err","getArtists","slice","forEach","artist","setGenres","str","newGenres","Object","keys","current","setTimeout","Math","min","className","onClick","setFeatured","src","images","url","displayAlbumCover","href","external_urls","spotify","key","PlaylistPage","playlists","setLoading","featured","setAccessToken","token","getUserPlaylists","limit","console","log","logOut","folder","file","newObj","App","loggedIn","creditsOpen","setOpen","params","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","getHashParams","access_token","style","cursor","cd","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.716bcc97.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/file.19ff04d1.png\";","module.exports = __webpack_public_path__ + \"static/media/folder.4506f81e.png\";","module.exports = __webpack_public_path__ + \"static/media/cd.ec7846ff.gif\";","function sortGenres(genres) {\n\tvar sortable = [];\n\tfor (var g in genres) {\n\t\tif(g !== \"pop\" && g !== \"edm\" && g !== \"rap\") {\n\t    \tsortable.push([g, genres[g]]);\n\t    }\n\t}\n\n\tsortable.sort(function(a, b) {\n\t    return b[1] - a[1];\n\t});\t\n\n\treturn sortable;\n}\n\nfunction updateObj(obj, prop) {\n\tif(obj.hasOwnProperty(prop)) {\n\t\tobj[prop]++;\n\t} else {\n\t\tobj[prop] = 1;\n\t}\n}\n\nfunction propToArr(obj, n) {\n\tlet index = 0;\n\tlet i = 0;\n\tlet result = [];\n\tlet max = obj.length - 1;\n    \n    while(index < n && index < max) {\n    \tif(obj[i]) {\n\t    \tlet g = obj[i][0];\n\t    \tif(g !== \"pop\" && g !== \"edm\" && g !== \"rap\") {\n\t    \t\tresult.push(g);\n\t    \t\tindex++;\n\t    \t} else {\n\t    \t\tmax -= 1;\n\t    \t}\n\t    }\n        i++;\n    }\n    return result;\n}\n\nfunction arrToList(arr, prop) {\n\tlet str = '';\n\tarr.forEach((item, index) => {\n\t\tstr += item[prop];\n\t\tif(index < arr.length - 1) {\n\t\t\tstr += ', ';\n\t\t}\n\t});\n\treturn str;\n}\n\nexport {sortGenres, updateObj, propToArr, arrToList};","import React, {useEffect, useState} from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport {sortGenres, updateObj, propToArr} from './analyzeData';\n\nfunction Playlist(props) {\n\n\tconst spotifyApi = new SpotifyWebApi();\n\tconst allGenres = props.allGenres;\n\n\tconst [percent, setPercent] = useState(-1);\n\tconst [appState, setAppState] = useState({\n\t\tloading: true,\n\t\terror: false,\n\t\tgenres: [],\n\t\tgenreObj: {}\n\t});\n\n\tuseEffect(() => {\n\t\tsetAppState({...appState, loading: true});\n\t\taddPercent(0);\n\t\tgetTracks();\n\t}, [props.pl]);\n\n\tconst displayAlbumCover = () => {\n\t\tif(props.pl.images) {\n\t\t\treturn props.pl.images[0].url;\n\t\t}\n\t}\n\n\tconst getTracks = () => {\n\t\t//console.log(props.pl);\n\t\tspotifyApi.getPlaylistTracks(props.pl.id)\n\t      .then((response) => {\n\t        let ids = response.items.map((song) => {\n\t\t\t\tif(song.track !== null) {\n\t\t\t\t\treturn song.track.artists[0].id;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t\tids = ids.filter(id => id !== null);\n\t\t\t//console.log(props.pl.name);\n    \t\tgetArtist({}, ids, 0, ids.length, props.pl.name);\n      \t})\n      \t.catch((err) => {\n      \t\tsetAppState({...appState, error: true});\n      \t});\n\t}\n\n\tconst getArtist = (genres, ids, index, n, name) => {\n\t\tif(index < n) {\n\t\t\tspotifyApi.getArtists(ids.slice(index, index + 50))\n\t\t\t\t.then((response) => {\n\t\t\t\t\t// console.log(name);\n\t\t\t\t\t// console.log(response);\n\t\t\t\t\tresponse.artists.forEach((artist) => {\n\t\t\t\t\t\tartist.genres.forEach(g => {\n\t\t\t\t\t\t\tupdateObj(genres, g);\n\t\t\t\t\t\t\tupdateObj(props.allGenres, g);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tprops.setGenres(props.allGenres);\n\t\t\t\t\tgetArtist(genres, ids, index+50, n, name);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t      \t\tsetAppState({...appState, error: true});\n\t\t      \t});\n\t\t} else {\n\t\t\tsetGenres(genres);\n\t\t}\n\t}\n\n\tconst setGenres = (genres) => {\n\t\tlet str = [];\n        let newGenres = {};\n\n\t\tif(Object.keys(genres).length > 0) {\n\t        newGenres = sortGenres(genres);\n\t        str = propToArr(newGenres, 3);\n\t\t} else {\n\t\t\tstr = [\"N/A\"];\n\t\t}\n        setAppState({loading: false, genres: str, genreObj: newGenres, error: false});\n        props.setGenres(allGenres);\n\t}\n\n\tconst addPercent = (current) => {\n\t\tsetPercent(current+1);\n\t\tif(current < 110) {\n\t\t\tsetTimeout(() => {\n\t\t\t    addPercent(current+1);\n\t\t\t}, 15);\n\t\t}\n\t}\n\n\tif (appState.loading || percent < 110) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Loading... ({Math.min(percent, 100)}%)</p>\n\t\t\t\t<div className=\"loading-bar\">\n\t\t\t\t\t<div className=\"loading-bar-inner\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"button-wrapper\"><div className=\"button\" onClick={()=>props.setFeatured(-1)}>Cancel</div></div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"playlist\">\n\t\t\t\t<img src={displayAlbumCover()} />\n\t\t\t\t<a href={props.pl.external_urls.spotify}><h3>{props.pl.name}</h3></a>\n\t\t\t\t{appState.genres.map((g, i) => <p className=\"genres\" key={i}>{g}</p>)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Playlist;","import React, {useEffect, useState} from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Playlist from './Playlist';\nimport {sortGenres, propToArr} from './analyzeData';\nimport file from './file.png';\nimport folder from './folder.png';\n\nfunction PlaylistPage(props) {\n  const [appState, setAppState] = useState({\n    playlists: [{}],\n    genres: {}\n  });\n  const [loading, setLoading] = useState(true);\n  const [featured, setFeatured] = useState(-1);\n\n  const spotifyApi = new SpotifyWebApi();\n  spotifyApi.setAccessToken(props.token);\n\n  const getPlaylists = () => {\n    spotifyApi.getUserPlaylists(props.id, {limit: 50})\n      .then((response) => {\n        console.log(response.items);\n        setAppState({playlists: response.items, genres: appState.genres});\n      })\n  }\n\n  useEffect(() => {\n    getPlaylists();\n  }, [setAppState]);\n\n  useEffect(() => {\n    setLoading(false);\n  }, [appState.playlists]);\n\n  const setGenres = (obj) => {\n    let newObj = sortGenres(obj);\n    setAppState({playlists: appState.playlists, genres: newObj});\n  }\n\n  const strGenres = (genres) => {\n    if(Object.keys(genres).length > 0) {\n      let arr = [];\n      let g = propToArr(genres, 5).map(genre => <div className=\"genre-level\"><p>{genre}</p></div>);\n      arr[0] = g[4];\n      arr[1] = g[3];\n      arr[2] = g[1];\n      arr[3] = g[0];\n      arr[4] = g[2];\n      return arr;\n    } else {\n      return <p>N/A</p>;\n    }\n  }\n\n  return (\n    <div className=\"genres-wrapper\">\n      {/*<div className=\"genres\">\n        <h2>Your Top Genres:</h2>\n        <div className=\"genre-level-wrapper\">\n          {strGenres(appState.genres)}\n        </div>\n      </div>*/}\n      <div className=\"main-window\" id=\"playlists\">\n        <div className=\"window-title-bar\">\n          <p>File Manager</p>\n          <p className=\"close\" onClick={props.logOut}>X</p>\n        </div>\n        <div className=\"inner-window\">\n          <div className=\"window-nav-bar\">\n            <ul>\n              <li>file</li>\n              <li>disk</li>\n              <li>tree</li>\n              <li>view</li>\n              <li>options</li>\n            </ul>\n          </div>\n          <div className=\"content-window\">\n            <div className=\"folder-wrapper\">\n              <img src={folder} />\n              <p className=\"playlist-name\">my playlists</p>\n            </div>\n            <div className=\"folder-indent\">\n              {\n                appState.playlists.map((pl, i) => {\n                  return (\n                    <div className=\"folder-wrapper\" key={i}>\n                      <div className=\"folder-line\"></div>\n                      <div className={\"folder-placeholder \"+(i === featured ? \"selected\" : \"\")}>\n                        <img src={file} />\n                        <p key={i} onClick={() => setFeatured(i)} className=\"playlist-name\">{pl.name}</p>\n                      </div>\n                    </div>\n                  );\n                })\n              }\n            </div>\n          </div>\n          <div className=\"bottom-bar\">\n            <p>Total {appState.playlists.length} file(s)</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"popup-wrapper\">\n        {\n          featured >= 0 ?\n          <div className=\"main-window\" id=\"featured\">\n            <div className=\"window-title-bar\">\n              <p>Note Pad</p>\n              <p className=\"close\" onClick={() => setFeatured(-1)}>X</p>\n            </div>\n            <div className=\"inner-window\">\n              <div className=\"window-nav-bar\">\n                <ul>\n                  <li>file</li>\n                  <li>edit</li>\n                  <li>format</li>\n                  <li>view</li>\n                  <li>help</li>\n                </ul>\n              </div>\n              <div className=\"content-window\">\n                  <Playlist pl={appState.playlists[featured]} allGenres={appState.genres} setGenres={setGenres} setFeatured={setFeatured}/>\n              </div>\n            </div>\n          </div>\n          :\n          <div></div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default PlaylistPage;\n","import React, {useEffect, useState} from 'react';\nimport './App.scss';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport PlaylistPage from './PlaylistPage';\nimport Div100vh from 'react-div-100vh';\nimport cd from './cd.gif';\n\nfunction App() {\n  const [appState, setAppState] = useState({\n    loggedIn: false,\n    token: '',\n    id: ''\n  });\n  const [creditsOpen, setOpen] = useState(false);\n\n  const spotifyApi = new SpotifyWebApi();\n\n  const getHashParams = () => {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  const logOut = () => {\n    setAppState({...appState, loggedIn: false});\n  }\n\n  useEffect(() => {\n    const params = getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    setAppState({loggedIn: token ? true : false, token: token, id: params.id});\n  }, [setAppState]);\n\n  return (\n    <div className='App'>\n      {appState.loggedIn ?\n        <div className=\"wrapper\">\n          <PlaylistPage token={appState.token} id={appState.id} logOut={logOut} />\n        </div>\n        :\n        <div className=\"wrapper\">\n          {creditsOpen ? \n            <div className=\"main-window\" id=\"credits\">\n              <div className=\"window-title-bar\">\n                <p>Note Pad</p>\n                <p className=\"close\" onClick={() => setOpen(false)}>X</p>\n              </div>\n              <div className=\"inner-window\">\n                <div className=\"window-nav-bar\">\n                  <ul>\n                    <li>file</li>\n                    <li>edit</li>\n                    <li>format</li>\n                    <li>view</li>\n                    <li>help</li>\n                  </ul>\n                </div>\n                <div className=\"content-window\">\n                  <h3 style={{cursor: 'pointer'}} onClick={() => setOpen(false)}>&lt;&lt; Go back</h3>\n                  <p><a href=\"https://clawang.github.io/\">Made by Claire Wang</a></p>\n                  <p><a href=\"https://open.spotify.com/user/1241364699?si=5278203f6e2942e6\">Follow me on Spotify!</a></p>\n                </div>\n              </div>\n            </div>\n          :\n            <div className=\"main-window\" id=\"login\">\n              <div className=\"window-title-bar\">\n                <p>Internet Explorer</p>\n                <p className=\"close\">X</p>\n              </div>\n              <div className=\"inner-window\">\n                <div className=\"window-nav-bar\">\n                  <ul>\n                    <li>file</li>\n                    <li>edit</li>\n                    <li>view</li>\n                    <li>favorites</li>\n                    <li>help</li>\n                  </ul>\n                </div>\n                <div className=\"address-bar\">\n                  <p>Address:</p>\n                  <div className=\"url\">https://genre-analyzer.herokuapp.com/</div>\n                  <p>Links</p>\n                </div>\n                <div className=\"content-window\">\n                  <img src={cd} />\n                  <h1>Playlist Genre Analyzer</h1>\n                  <div className=\"start-descrip\">\n                    <div className=\"button-wrapper\"><div className=\"button\"><a href=\"http://localhost:8888/login\"> Connect Spotify </a></div></div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"bottom-bar\">\n                <p id=\"credits-link\" onClick={() => setOpen(true)}>Credits</p>\n              </div>\n            </div>\n          }\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}