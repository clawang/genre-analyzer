{"version":3,"sources":["analyzeData.js","PlaylistPage.js","TopArtists.js","TopSongs.js","TopGenres.js","CanvasGraphic.js","Loading.js","SummaryPage.js","App.js","serviceWorker.js","index.js"],"names":["sortGenres","genres","sortable","g","push","sort","a","b","updateObj","obj","prop","hasOwnProperty","propToArr","n","index","i","result","max","length","arrToList","arr","str","forEach","item","PlaylistPage","ArtistImages","props","useEffect","resizeImgs","document","querySelectorAll","img","w","clientWidth","style","height","window","addEventListener","className","src","artist","images","url","alt","name","TopArtists","useState","topArtists","appState","setAppState","spotifyApi","SpotifyWebApi","setAccessToken","token","options","time_range","timeframe","getMyTopArtists","err","response","setError","topSongs","items","updateArtists","getArtists","slice","map","key","SongCover","onMouseOver","handleHover","onMouseLeave","handleMouseLeave","TopSongs","artists","number","songDetails","setSong","mobile","setMobile","getMyTopTracks","then","updateTracks","getTracks","innerWidth","song","album","TopGenres","analyzeGenres","updateGenres","Object","keys","genre","strGenres","CanvasGraphic","palette","shortenString","text","remove","indexOf","substring","concat","drawCanvas","c","getElementById","width","clientHeight","ctx","getContext","scale","DarkMuted","bgColor","getRgb","fillStyle","fillRect","font","Vibrant","fillText","image","Image","crossOrigin","tracks","onload","naturalWidth","naturalHeight","diff","drawImage","LightVibrant","measureText","ratio","toRemove","Math","ceil","writeText","topGenre","charAt","toUpperCase","DarkVibrant","words","x","y","finished","from","getPalette","getColor","onClick","dt","toDataURL","replace","link","createElement","download","href","click","id","Loading","state","SummaryPage","chosen","setArtists","loaded","setLoaded","setGenres","location","setLocation","error","ranges","1","2","3","colors","updateTimeframe","time","onScroll","container","querySelector","topGenres","graphic","bg","scrollTop","offsetTop","backgroundColor","newArtists","newTracks","newGenres","App","loggedIn","e","hashParams","r","q","hash","exec","decodeURIComponent","getHashParams","access_token","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"qLAAA,SAASA,EAAWC,GACnB,IAAIC,EAAW,GACf,IAAK,IAAIC,KAAKF,EACJ,QAANE,GAAqB,QAANA,GAAqB,QAANA,GAC7BD,EAASE,KAAK,CAACD,EAAGF,EAAOE,KAQ9B,OAJAD,EAASG,MAAK,SAASC,EAAGC,GACtB,OAAOA,EAAE,GAAKD,EAAE,MAGbJ,EAGR,SAASM,EAAUC,EAAKC,GACpBD,EAAIE,eAAeD,GACrBD,EAAIC,KAEJD,EAAIC,GAAQ,EAId,SAASE,EAAUH,EAAKI,GAMpB,IALH,IAAIC,EAAQ,EACRC,EAAI,EACJC,EAAS,GACTC,EAAMR,EAAIS,OAAS,EAEdJ,EAAQD,GAAKC,EAAQG,GAAK,CAC/B,GAAGR,EAAIM,GAAI,CACV,IAAIZ,EAAIM,EAAIM,GAAG,GACN,QAANZ,GAAqB,QAANA,GAAqB,QAANA,GAChCa,EAAOZ,KAAKD,GACZW,KAEAG,GAAO,EAGNF,IAEJ,OAAOC,EAGX,SAASG,EAAUC,EAAKV,GACvB,IAAIW,EAAM,GAOV,OANAD,EAAIE,SAAQ,SAACC,EAAMT,GAClBO,GAAOE,EAAKb,GACTI,EAAQM,EAAIF,OAAS,IACvBG,GAAO,SAGFA,ECoBOG,I,QCnBf,SAASC,EAAaC,GACpBC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAa,WACjBC,SAASC,iBAAiB,uBAAuBR,SAAQ,SAAAS,GACvD,IAAIC,EAAID,EAAIE,YACZF,EAAIG,MAAMC,OAASH,EAAI,SAQ3B,OAJAI,OAAOC,iBAAiB,UAAU,WAChCT,OAIA,yBAAKU,UAAU,iBACb,yBAAKC,IAAKb,EAAMc,OAAOC,OAAO,GAAGC,IAAKJ,UAAU,OAAOK,IAAKjB,EAAMc,OAAOI,OACzE,yBAAKL,IAAKb,EAAMc,OAAOC,OAAO,GAAGC,IAAKJ,UAAU,OAAOK,IAAKjB,EAAMc,OAAOI,OACzE,yBAAKL,IAAKb,EAAMc,OAAOC,OAAO,GAAGC,IAAKJ,UAAU,OAAOK,IAAKjB,EAAMc,OAAOI,QAKhEC,MA3Ef,SAAoBnB,GAAQ,IAAD,EACOoB,mBAAS,CACvCC,WAAY,CAAC,MAFU,mBAClBC,EADkB,KACRC,EADQ,KAKnBC,EAAa,IAAIC,IAmBvB,OAlBAD,EAAWE,eAAe1B,EAAM2B,OAchC1B,qBAAU,YAZS,WACjB,IAAI2B,EAAU,CAACC,WAAY7B,EAAM8B,WACjCN,EAAWO,gBAAgBH,GAAS,SAACI,EAAKC,GACrCD,EACDhC,EAAMkC,SAAS,IAEfX,EAAY,CAACY,SAAUb,EAASa,SAAUd,WAAYY,EAASG,QAC/DpC,EAAMqC,cAAcJ,EAASG,WAMjCE,KACC,CAACf,IAGF,yBAAKX,UAAU,uBACZU,EAASD,WAAW,GAAGH,KACtB,yBAAKN,UAAU,eACb,2CACA,yBAAKA,UAAU,mBACdU,EAASD,WAAWkB,MAAM,EAAE,GAAGC,KAAI,SAAC1B,EAAQ1B,GAC3C,OACE,yBAAKwB,UAAU,iBAAiB6B,IAAKrD,GACnC,kBAACW,EAAD,CAAce,OAAQA,IACtB,yBAAKF,UAAU,eACb,wBAAIA,UAAU,SAAd,IAAwBxB,EAAM,GAC9B,wBAAIwB,UAAU,SAASE,EAAOI,aAQxC,2CC0DR,SAASwB,EAAU1C,GACjB,OACE,yBAAKY,UAAW,mBAA0BZ,EAAMZ,MAAOuD,YAAa3C,EAAM4C,YAAaC,aAAc7C,EAAM8C,kBACzG,yBAAKjC,IAAKb,EAAMa,IAAKI,IAAKjB,EAAMkB,QAKvB6B,MA7Gf,SAAkB/C,GAAQ,IAAD,EACSoB,mBAAS,CACvCe,SAAU,CAAC,MAFU,mBAChBb,EADgB,KACNC,EADM,OAKQH,mBAAS,CACtCF,KAAM,GACN8B,QAAS,CAAC,IACVC,OAAQ,IARa,mBAKhBC,EALgB,KAKHC,EALG,OAWK/B,oBAAS,GAXd,mBAWhBgC,EAXgB,KAWRC,EAXQ,KAajB7B,EAAa,IAAIC,IACvBD,EAAWE,eAAe1B,EAAM2B,OAEhC,IASMiB,EAAc,SAACzD,EAAGP,EAAGS,GACzB8D,EAAQ,CAACjC,KAAM/B,EAAG6D,QAASpE,EAAGqE,OAAQ5D,KAkBxC,OAfAY,qBAAU,YAbQ,WAChB,IAAI2B,EAAU,CAACC,WAAY7B,EAAM8B,WACjCN,EAAW8B,eAAe1B,GACvB2B,MAAK,SAACtB,GACLV,EAAY,CAACY,SAAUF,EAASG,QAChCpC,EAAMwD,aAAavB,EAASG,UAShCqB,GACG/C,OAAOgD,WAAa,KACrBL,GAAU,KAEX,CAAC9B,IAEJb,OAAOC,iBAAiB,UAAU,WAC7BD,OAAOgD,WAAa,IACrBL,GAAU,GAEVA,GAAU,MAKZ,yBAAKzC,UAAU,qBACZU,EAASa,SAAS,GAAGjB,KACpB,yBAAKN,UAAU,aACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,wBACb,iEAGF,yBAAKA,UAAU,sBACZwC,EACD9B,EAASa,SAASI,MAAM,EAAG,GAAGC,KAAI,SAACmB,EAAMvE,GACvC,OACE,yBAAKwB,UAAU,eAAe6B,IAAKrD,GACjC,yBAAKwB,UAAU,eACb,4BAAKxB,EAAQ,IAEf,yBAAKwB,UAAU,gBACb,wBAAIA,UAAU,sBAAsB+C,EAAKzC,MACzC,uBAAGN,UAAU,wBAAwBnB,EAAUkE,EAAKX,QAAS,cAMrE,6BAGF,yBAAKpC,UAAU,iBACb,yBAAKA,UAAU,YACdU,EAASa,SAASI,MAAM,EAAEa,EAAS,EAAI,IAAIZ,KAAI,SAACmB,EAAMvE,GACrD,OACE,kBAACsD,EAAD,CAAW7B,IAAK8C,EAAKC,MAAM7C,OAAO,GAAGC,IAAKE,KAAMyC,EAAKzC,KAAM9B,MAAOA,EAAOqD,IAAKrD,EAAOwD,YAAa,kBAAMA,EAAYe,EAAKzC,KAAMyC,EAAKX,QAAS5D,IAAQ0D,iBAAkB,kBAAMF,EAAY,GAAI,CAAC,IAAK,WAK3M,yBAAKhC,UAAU,2BACdsC,EAAYhC,KACX,yBAAKN,UAAU,iBACb,wBAAIA,UAAU,wBAAwBsC,EAAYD,OAAS,GAC3D,wBAAIrC,UAAU,uBAAuBsC,EAAYhC,MACjD,uBAAGN,UAAU,wBAAwBnB,EAAUyD,EAAYF,QAAS,UAGtE,8BAKJ,2CC5BOa,MAlEf,SAAmB7D,GAAQ,IAAD,EACQoB,mBAAS,CACvC7C,OAAQ,KAFc,mBACjB+C,EADiB,KACPC,EADO,KAKpByB,EAAU,CAAC,IAETxB,EAAa,IAAIC,IACvBD,EAAWE,eAAe1B,EAAM2B,OAYhC1B,qBAAU,YAVS,WACjB,IAAI2B,EAAU,CAACC,WAAY7B,EAAM8B,WACjCN,EAAWO,gBAAgBH,GACxB2B,MAAK,SAACtB,GACLe,EAAUf,EAASG,MACnBb,EAAY,CAAChD,OAAQ+C,EAAS/C,SAC9BuF,OAKJxB,KACC,CAACf,IAEJ,IAAMuC,EAAgB,WACpBd,EAAQpD,SAAQ,SAACkB,GACZA,EAAOvC,QACRuC,EAAOvC,OAAOqB,SAAQ,SAACnB,GACrB,IAAIM,EAAMuC,EAAS/C,OACnBO,EAAUC,EAAKN,GACf8C,EAAY,CAAChD,OAAQQ,UAI3BiB,EAAM+D,aAAazC,EAAS/C,SAmB9B,OACE,yBAAKqC,UAAU,kBACb,yBAAKA,UAAU,UACb,qDACA,8FACA,yBAAKA,UAAU,uBArBH,SAACrC,GACjB,GAAGyF,OAAOC,KAAK1F,GAAQiB,OAAS,EAAG,CACjC,IACIE,EAAM,GACNjB,EAAIS,EAFQZ,EAAWC,GAEE,GAAGiE,KAAI,SAAC0B,EAAO9E,GAAR,OAAkB,yBAAKwB,UAAU,cAAc6B,IAAKrD,GAAO,yBAAKwB,UAAU,qBAAoB,4BAAKsD,IAAiB,yBAAKtD,UAAU,yBAMvK,OALAlB,EAAI,GAAKjB,EAAE,GACXiB,EAAI,GAAKjB,EAAE,GACXiB,EAAI,GAAKjB,EAAE,GACXiB,EAAI,GAAKjB,EAAE,GACXiB,EAAI,GAAKjB,EAAE,GACJiB,EAEP,OAAO,kCAUAyE,CAAU7C,EAAS/C,Y,iBC2IjB6F,MAvMf,SAAuBpE,GAAQ,IAAD,EACIoB,mBAAS,CACvCiD,QAAS,KAFiB,mBACX9C,GADW,WAKtB+C,EAAgB,SAACC,EAAMC,GAC5B,IAAIpF,EAAQmF,EAAKE,QAAQ,KACzB,OAAGrF,EAAQ,EAAUmF,EAAKG,UAAU,EAAGtF,GACjCmF,EAAKG,UAAU,EAAGH,EAAK/E,OAAOgF,GAAQG,OAAO,OAgB9CC,EAAa,SAACP,GACnB,IAAIQ,EAAI1E,SAAS2E,eAAe,gBAChCD,EAAEE,MAAwB,EAAhBF,EAAEtE,YACdsE,EAAEpE,OAA0B,EAAjBoE,EAAEG,aACX,IAAIC,EAAMJ,EAAEK,WAAW,MAOvB,GANGxE,OAAOgD,WAAa,IACtBuB,EAAIE,MAAM,IAAK,KAEfF,EAAIE,MAAM,EAAG,GAGXd,EAAQe,UAAW,CACrB,IAAMC,EAAUhB,EAAQe,UAAUE,SACpCL,EAAIM,UAAY,OAASF,EAAQ,GAAK,IAAMA,EAAQ,GAAK,IAAMA,EAAQ,GAAK,SAE5EJ,EAAIM,UAAY,aAOf,GALFN,EAAIO,SAAS,EAAG,EAAGX,EAAEE,MAAOF,EAAEpE,QAE9BwE,EAAIM,UAAY,mBAChBN,EAAIQ,KAAO,0BAENpB,EAAQqB,QAAS,CACnB,IAAML,EAAUhB,EAAQqB,QAAQJ,SAClCL,EAAIM,UAAY,OAASF,EAAQ,GAAK,IAAMA,EAAQ,GAAK,IAAMA,EAAQ,GAAK,SAE5EJ,EAAIM,UAAY,kBAEjBN,EAAIU,SAAS,qBAAsB,IAAK,IACtCV,EAAIO,SAAS,GAAI,GAAI,IAAK,GAE1B,IAAMI,EAAQ,IAAIC,MA2BpB,GA1BED,EAAME,YAAc,YACjB9F,EAAM+F,SACVH,EAAM/E,IAAMb,EAAMgD,QAAQ,GAAGjC,OAAO,GAAGC,KAAO,IAG/C4E,EAAMI,OAAS,WACd,GAAGJ,EAAMK,aAAeL,EAAMM,cAAe,CAC5C,IAAMC,GAAQP,EAAMM,cAAgBN,EAAMK,cAAgB,EAC1DhB,EAAImB,UAAUR,EAAO,EAAGO,EAAMP,EAAMK,aAAcL,EAAMK,aAAc,IAAK,GAAI,IAAK,KACpFhB,EAAImB,UAAUR,EAAO,EAAGO,EAAMP,EAAMK,aAAcL,EAAMK,aAAc,IAAK,IAAK,IAAK,KACrFhB,EAAImB,UAAUR,EAAO,EAAGO,EAAMP,EAAMK,aAAcL,EAAMK,aAAc,IAAK,IAAK,IAAK,KACrFhB,EAAImB,UAAUR,EAAO,EAAGO,EAAMP,EAAMK,aAAcL,EAAMK,aAAc,IAAK,IAAK,IAAK,UAC/E,GAAGL,EAAMK,aAAeL,EAAMM,cAAe,CACnD,IAAMC,GAAQP,EAAMK,aAAeL,EAAMM,eAAiB,EAC1DjB,EAAImB,UAAUR,EAAOO,EAAM,EAAGP,EAAMM,cAAeN,EAAMM,cAAe,IAAK,GAAI,IAAK,KACtFjB,EAAImB,UAAUR,EAAOO,EAAM,EAAGP,EAAMM,cAAeN,EAAMM,cAAe,IAAK,IAAK,IAAK,KACvFjB,EAAImB,UAAUR,EAAOO,EAAM,EAAGP,EAAMM,cAAeN,EAAMM,cAAe,IAAK,IAAK,IAAK,KACvFjB,EAAImB,UAAUR,EAAOO,EAAM,EAAGP,EAAMM,cAAeN,EAAMM,cAAe,IAAK,IAAK,IAAK,UAEvFjB,EAAImB,UAAUR,EAAO,IAAK,GAAI,IAAK,KACnCX,EAAImB,UAAUR,EAAO,IAAK,IAAK,IAAK,KACpCX,EAAImB,UAAUR,EAAO,IAAK,IAAK,IAAK,KACpCX,EAAImB,UAAUR,EAAO,IAAK,IAAK,IAAK,MAInCvB,EAAQgC,aAAc,CACtB,IAAMhB,EAAUhB,EAAQgC,aAAaf,SACvCL,EAAIM,UAAY,OAASF,EAAQ,GAAK,IAAMA,EAAQ,GAAK,IAAMA,EAAQ,GAAK,SAE5EJ,EAAIM,UAAY,mBAGjBN,EAAIQ,KAAO,0BACXR,EAAIU,SAAS,cAAe,GAAI,KAChCV,EAAIM,UAAY,mBAChBN,EAAIQ,KAAO,0BAEX,IAAI,IAAIpG,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAGW,EAAMgD,QAAQ3D,IAA8C,GAAxC2E,OAAOC,KAAKjE,EAAMgD,QAAQ3D,IAAIG,OAAa,CACjE,IAAI0B,EAAOlB,EAAMgD,QAAQ3D,GAAG6B,KAExB6D,EADUE,EAAIqB,YAAYpF,GACV6D,MACpB,GAAGA,EAAQ,IAAK,CACf,IAAIwB,EAAQxB,EAAM7D,EAAK1B,OACnBgH,EAAWC,KAAKC,MAAM3B,EAAM,KAAKwB,GACrCrF,EAAOoD,EAAcpD,EAAMsF,EAAS,GAErCG,EAAU1B,EAAK/D,EAAM,GAAI,IAAU,GAAJ7B,GAIjC,GAAGgF,EAAQgC,aAAc,CACtB,IAAMhB,EAAUhB,EAAQgC,aAAaf,SACvCL,EAAIM,UAAY,OAASF,EAAQ,GAAK,IAAMA,EAAQ,GAAK,IAAMA,EAAQ,GAAK,SAE5EJ,EAAIM,UAAY,mBAGjBN,EAAIQ,KAAO,0BACXkB,EAAU1B,EAAK,YAAa,GAAI,KAChCA,EAAIM,UAAY,mBAChBN,EAAIQ,KAAO,0BAEX,IAAI,IAAIpG,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAGW,EAAM+F,OAAO1G,GAAI,CACnB,IAAI6B,EAAOlB,EAAM+F,OAAO1G,GAAG6B,KAEvB6D,EADUE,EAAIqB,YAAYpF,GACV6D,MACpB,GAAGA,EAAQ,IAAK,CACf,IAAIwB,EAAQxB,EAAM7D,EAAK1B,OACnBgH,EAAWC,KAAKC,MAAM3B,EAAM,KAAKwB,GACrCrF,EAAOoD,EAAcpD,EAAMsF,EAAS,GAErCG,EAAU1B,EAAK/D,EAAM,GAAI,IAAU,GAAJ7B,GAIjC,GAAGgF,EAAQgC,aAAc,CACtB,IAAMhB,EAAUhB,EAAQgC,aAAaf,SACvCL,EAAIM,UAAY,OAASF,EAAQ,GAAK,IAAMA,EAAQ,GAAK,IAAMA,EAAQ,GAAK,SAE5EJ,EAAIM,UAAY,mBAMjB,GAJAN,EAAIQ,KAAO,0BACXkB,EAAU1B,EAAK,YAAa,IAAK,KACjCA,EAAIM,UAAY,mBAChBN,EAAIQ,KAAO,0BACRzF,EAAMzB,QAAUyB,EAAMzB,OAAO,GAAG,GAAI,CACtC,IAAIE,EAAIuB,EAAMzB,OAAO,GAAG,GACpBqI,EAAWnI,EAAEoI,OAAO,GAAGC,cAAgBrI,EAAE8D,MAAM,GACnDoE,EAAU1B,EAAK2B,EAAU,IAAK,KAG/B,GAAGvC,EAAQ0C,YAAa,CACrB,IAAM1B,EAAUhB,EAAQ0C,YAAYzB,SACtCL,EAAIM,UAAY,QAAUF,EAAQ,GAAK,IAAMA,EAAQ,GAAK,IAAMA,EAAQ,GAAK,aAE7EJ,EAAIM,UAAY,sBAEjBN,EAAIQ,KAAO,0BACXkB,EAAU1B,EAAK,4BAA6B,IAAK,KAG1C0B,EAAY,SAAC1B,EAAK+B,EAAOC,EAAGC,GACjCjC,EAAIU,SAASqB,EAAOC,EAAGC,IAuBxB,OANAjH,qBAAU,WACLD,EAAMmH,UAAY,GAxKN,WAChB,IAAItG,EAAM,GACPb,EAAM+F,SACVlF,EAAMb,EAAMgD,QAAQ,GAAGjC,OAAO,GAAGC,KAAO,IAEvC0E,IAAQ0B,KAAKvG,GAAKwG,YAAW,SAASrF,EAAKqC,GACzCA,IACF9C,EAAY,CAAC8C,QAASA,IACtBO,EAAWP,OAiKTiD,KAEA,CAACtH,EAAMmH,WAGR,yBAAKvG,UAAU,0BACd,yBAAKA,UAAU,kBACd,yBAAKA,UAAU,gBACd,qDACA,wDACA,oDACA,4BAAQ2G,QA3BI,WAChB,IACEC,EADWrH,SAAS2E,eAAe,gBACvB2C,UAAU,aAK1BD,GAHAA,EAAKA,EAAGE,QAAQ,qBAAsB,kCAG9BA,QAAQ,kCAAmC,sGACnD,IAAIC,EAAOxH,SAASyH,cAAc,KAChCD,EAAKE,SAAW,yBAChBF,EAAKG,KAAON,EACZG,EAAKI,SAgB0BnH,UAAU,gBAArC,aAEA,4BAAQoH,GAAG,eAAejD,MAAM,MAAMtE,OAAO,W,OCnLrCwH,MAff,SAAiBjI,GAChB,OACC,yBAAKY,UAAU,WACG,IAAhBZ,EAAMkI,MACN,8DAEA,6BACC,gFACA,gCAAQ,uBAAGJ,KAAK,KAAR,iBCuHEK,MAvHf,SAAqBnI,GAAQ,IAAD,EACMoB,mBAAS,CACvCgH,QAAQ,EACRtG,UAAW,EACXiE,OAAQ,CAAC,MAJe,mBACnBzE,EADmB,KACTC,EADS,OAOIH,mBAAS,CAAC,KAPd,mBAOnB4B,EAPmB,KAOVqF,EAPU,OASEjH,mBAAS,GATX,mBASnBkH,EATmB,KASXC,EATW,OAWEnH,mBAAS,CAAC,KAXZ,mBAWnB7C,EAXmB,KAWXiK,EAXW,OAaMpH,mBAAS,GAbf,mBAanBqH,EAbmB,KAaTC,EAbS,OAeAtH,mBAAS,GAfT,mBAenBuH,EAfmB,KAeZzG,EAfY,MAiBP,IAAIT,KACZC,eAAe1B,EAAM2B,OAEhC,IAAMiH,EAAS,CACbC,EAAG,aACHC,EAAG,cACHC,EAAG,aAGCC,EACG,UADHA,EAEM,UAFNA,EAGE,UAHFA,EAIG,UAGT/I,qBAAU,cAEP,CAACsB,IAEJ,IAAM0H,EAAkB,SAACC,GACvB3H,EAAY,2BAAID,GAAL,IAAeQ,UAAWoH,EAAMd,QAAQ,MAwCrD,OACE,yBAAKxH,UAAU,WAEbU,EAAS8G,OACP,6BACGE,EAAS,EACR,kBAAC,IAAD,KACE,kBAAC,EAAD,CAASJ,MAAOS,KAGlB,qCAEF,yBAAK/H,UAAU,UAAf,uBAAuC,uBAAGkH,KAAK,6BAA6BE,GAAG,eAAxC,eAAvC,KACA,yBAAKpH,UAAU,cAAa,2BAAI6H,EAAJ,SAC5B,yBAAK7H,UAAU,mBACb,kBAAC,IAAD,CAAUA,UAAU,cAAcuI,SApCvB,WACnB,IAAIC,EAAYjJ,SAASkJ,cAAc,gBACnClH,EAAWhC,SAASkJ,cAAc,sBAClCC,EAAYnJ,SAASkJ,cAAc,mBACnCE,EAAUpJ,SAASkJ,cAAc,2BACjCG,EAAKrJ,SAASkJ,cAAc,eAC7BD,EAAUK,UAAYtH,EAASuH,UAAY,KAC5CF,EAAGhJ,MAAMmJ,gBAAkBX,EAC3BN,EAAY,IACJU,EAAUK,WAAatH,EAASuH,UAAY,KAAON,EAAUK,UAAYH,EAAUI,UAAY,KACvGF,EAAGhJ,MAAMmJ,gBAAkBX,EAC3BN,EAAY,IACJU,EAAUK,WAAaH,EAAUI,UAAY,KAAON,EAAUK,UAAYF,EAAQG,UAAY,KACtGF,EAAGhJ,MAAMmJ,gBAAkBX,EAC3BN,EAAY,IACJU,EAAUK,WAAaF,EAAQG,UAAY,MACnDF,EAAGhJ,MAAMmJ,gBAAkBX,EAC3BN,EAAY,MAoBJ,kBAAC,EAAD,CAAY/G,MAAO3B,EAAM2B,MAAOG,UAAW8G,EAAOtH,EAASQ,WAAYO,cAhD7D,SAACuH,GACrBvB,EAAWuB,GACXrB,GAAU,SAAAD,GAAM,OAAIA,EAAS,MA8CkFpG,SAAUA,IAC/G,kBAAC,EAAD,CAAUP,MAAO3B,EAAM2B,MAAOG,UAAW8G,EAAOtH,EAASQ,WAAY0B,aAtD5D,SAACqG,GACpBtI,EAAY,2BAAID,GAAL,IAAeyE,OAAQ8D,KAClCtB,GAAU,SAAAD,GAAM,OAAIA,EAAS,QAqDnB,kBAAC,EAAD,CAAW3G,MAAO3B,EAAM2B,MAAOG,UAAW8G,EAAOtH,EAASQ,WAAYiC,aA7C7D,SAAC+F,GACpB,IAAIrL,EAAIH,EAAWwL,GACnBtB,EAAU/J,GACV8J,GAAU,SAAAD,GAAM,OAAIA,EAAS,QA2CnB,kBAAC,EAAD,CAAetF,QAASA,EAAS+C,OAAQzE,EAASyE,OAAQxH,OAAQA,EAAQ4I,SAAUmB,MAGxF,yBAAK1H,UAAU,gBAGjB,kBAAC,IAAD,KACE,yBAAKA,UAAU,kBACb,uDACA,yBAAKA,UAAU,0BACb,4BAAQ2G,QAAS,kBAAM0B,EAAgB,KAAvC,WACA,4BAAQ1B,QAAS,kBAAM0B,EAAgB,KAAvC,YACA,4BAAQ1B,QAAS,kBAAM0B,EAAgB,KAAvC,gBCzDCc,MAvDf,WAAgB,IAAD,EACmB3I,mBAAS,CACvC4I,UAAU,EACVrI,MAAO,KAHI,mBACNL,EADM,KACIC,EADJ,KAMPC,EAAa,IAAIC,IAuBvB,OATAxB,qBAAU,WACR,IACM0B,EAdc,WACpB,IACIsI,EADAC,EAAa,GACVC,EAAI,uBACPC,EAAI1J,OAAO+H,SAAS4B,KAAK3F,UAAU,GAEvC,IADAuF,EAAIE,EAAEG,KAAKF,GACJH,GACJC,EAAWD,EAAE,IAAMM,mBAAmBN,EAAE,IACxCA,EAAIE,EAAEG,KAAKF,GAEd,OAAOF,EAIQM,GACMC,aACjB9I,GACFH,EAAWE,eAAeC,GAE5BJ,EAAY,CAACyI,WAAUrI,EAAsBA,MAAOA,MACnD,CAACJ,IAGF,yBAAKX,UAAU,OACZU,EAAS0I,SACR,6BACG,kBAAC,EAAD,CAAarI,MAAOL,EAASK,SAIhC,kBAAC,IAAD,KACE,yBAAKf,UAAU,gBACb,6BACE,yBAAKA,UAAU,aAAY,+CAC3B,yBAAKA,UAAU,aAAY,oDAC3B,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,SAAd,2EACA,gCAAQ,uBAAGkH,KAAK,UAAR,wBAEV,uBAAGlH,UAAU,cAAb,sCCzCM8J,QACW,cAA7BhK,OAAO+H,SAASkC,UAEe,UAA7BjK,OAAO+H,SAASkC,UAEhBjK,OAAO+H,SAASkC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF5K,SAAS2E,eAAe,SDyHpB,kBAAmBkG,WACrBA,UAAUC,cAAcC,MACrB3H,MAAK,SAAA4H,GACJA,EAAaC,gBAEdC,OAAM,SAAA1C,GACL2C,QAAQ3C,MAAMA,EAAM4C,a","file":"static/js/main.00e08a75.chunk.js","sourcesContent":["function sortGenres(genres) {\n\tvar sortable = [];\n\tfor (var g in genres) {\n\t\tif(g !== \"pop\" && g !== \"edm\" && g !== \"rap\") {\n\t    \tsortable.push([g, genres[g]]);\n\t    }\n\t}\n\n\tsortable.sort(function(a, b) {\n\t    return b[1] - a[1];\n\t});\t\n\n\treturn sortable;\n}\n\nfunction updateObj(obj, prop) {\n\tif(obj.hasOwnProperty(prop)) {\n\t\tobj[prop]++;\n\t} else {\n\t\tobj[prop] = 1;\n\t}\n}\n\nfunction propToArr(obj, n) {\n\tlet index = 0;\n\tlet i = 0;\n\tlet result = [];\n\tlet max = obj.length - 1;\n    \n    while(index < n && index < max) {\n    \tif(obj[i]) {\n\t    \tlet g = obj[i][0];\n\t    \tif(g !== \"pop\" && g !== \"edm\" && g !== \"rap\") {\n\t    \t\tresult.push(g);\n\t    \t\tindex++;\n\t    \t} else {\n\t    \t\tmax -= 1;\n\t    \t}\n\t    }\n        i++;\n    }\n    return result;\n}\n\nfunction arrToList(arr, prop) {\n\tlet str = '';\n\tarr.forEach((item, index) => {\n\t\tstr += item[prop];\n\t\tif(index < arr.length - 1) {\n\t\t\tstr += ', ';\n\t\t}\n\t});\n\treturn str;\n}\n\nexport {sortGenres, updateObj, propToArr, arrToList};","import React, {useEffect, useState} from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Playlist from './Playlist';\nimport {sortGenres, propToArr} from './analyzeData';\n\nfunction PlaylistPage(props) {\n  const [appState, setAppState] = useState({\n    playlists: [{}],\n    genres: {}\n  });\n  const [loading, setLoading] = useState(true);\n\n  const spotifyApi = new SpotifyWebApi();\n  spotifyApi.setAccessToken(props.token);\n\n  const getPlaylists = () => {\n    spotifyApi.getUserPlaylists()\n      .then((response) => {\n        //console.log(response.items);\n        setAppState({playlists: response.items, genres: appState.genres});\n      })\n  }\n\n  useEffect(() => {\n    getPlaylists();\n  }, [setAppState]);\n\n  useEffect(() => {\n    setLoading(false);\n  }, [appState.playlists]);\n\n  const setGenres = (obj) => {\n    let newObj = sortGenres(obj);\n    setAppState({playlists: appState.playlists, genres: newObj});\n  }\n\n  const strGenres = (genres) => {\n    if(Object.keys(genres).length > 0) {\n      let arr = [];\n      let g = propToArr(genres, 5).map(genre => <div className=\"genre-level\"><p>{genre}</p></div>);\n      arr[0] = g[4];\n      arr[1] = g[3];\n      arr[2] = g[1];\n      arr[3] = g[0];\n      arr[4] = g[2];\n      return arr;\n    } else {\n      return <p>N/A</p>;\n    }\n  }\n\n\n  return (\n    <div className=\"genres-wrapper\">\n      {/*<div className=\"genres\">\n        <h2>Your Top Genres:</h2>\n        <div className=\"genre-level-wrapper\">\n          {strGenres(appState.genres)}\n        </div>\n      </div>*/}\n      <div className=\"playlist-wrapper\">\n        {!loading ? appState.playlists.map((pl) => {\n            return <Playlist pl={pl} allGenres={appState.genres} setGenres={setGenres} />;\n          }) \n        :\n        <div></div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default PlaylistPage;\n","import React, {useEffect, useState} from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\n\nfunction TopArtists(props) {\n  const [appState, setAppState] = useState({\n    topArtists: [{}]\n  });\n\n  const spotifyApi = new SpotifyWebApi();\n  spotifyApi.setAccessToken(props.token);\n\n  const getArtists = () => {\n    let options = {time_range: props.timeframe};\n    spotifyApi.getMyTopArtists(options, (err, response) => {\n      if(err) {\n        props.setError(1);\n      } else {\n        setAppState({topSongs: appState.topSongs, topArtists: response.items});\n        props.updateArtists(response.items);\n      }\n    });\n  }\n\n  useEffect(() => {\n    getArtists();\n  }, [setAppState]);\n\n  return (\n    <div className=\"top-artists-wrapper\">\n      {appState.topArtists[0].name ?\n        <div className=\"top-artists\">\n          <h1>Top Artists</h1>\n          <div className=\"artists-wrapper\">\n          {appState.topArtists.slice(0,3).map((artist, index) => {\n            return(\n              <div className=\"artist-wrapper\" key={index}>\n                <ArtistImages artist={artist} />\n                <div className=\"artist-desc\">\n                  <h3 className=\"black\">#{index+1}</h3>\n                  <h3 className=\"green\">{artist.name}</h3>\n                </div>\n              </div>\n            );\n          })}\n          </div>\n        </div>\n        :\n        <p>Loading...</p>\n      }\n    </div>\n  )\n}\n\nfunction ArtistImages(props) {\n  useEffect(() => {\n    resizeImgs();\n  }, []);\n\n  const resizeImgs = () => {\n    document.querySelectorAll('.img3, .img2, .img1').forEach(img => {\n      let w = img.clientWidth;\n      img.style.height = w + 'px';\n    });\n  }\n\n  window.addEventListener('resize', () => {\n    resizeImgs();\n  });\n\n  return (\n    <div className=\"artist-images\">\n      <img src={props.artist.images[0].url} className=\"img1\" alt={props.artist.name} />\n      <img src={props.artist.images[0].url} className=\"img2\" alt={props.artist.name} />                  \n      <img src={props.artist.images[0].url} className=\"img3\" alt={props.artist.name} />\n    </div>\n  )\n}\n\nexport default TopArtists;\n","import React, {useEffect, useState} from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport {arrToList} from './analyzeData';\n\nfunction TopSongs(props) {\n  const [appState, setAppState] = useState({\n    topSongs: [{}]\n  });\n\n  const [songDetails, setSong] = useState({\n    name: '',\n    artists: [{}],\n    number: 0\n  });\n\n  const [mobile, setMobile] = useState(false);\n\n  const spotifyApi = new SpotifyWebApi();\n  spotifyApi.setAccessToken(props.token);\n\n  const getTracks = () => {\n    let options = {time_range: props.timeframe};\n    spotifyApi.getMyTopTracks(options)\n      .then((response) => {\n        setAppState({topSongs: response.items});\n        props.updateTracks(response.items);\n      })\n  }\n\n  const handleHover = (n, a, i) => {\n    setSong({name: n, artists: a, number: i});\n  }\n\n  useEffect(() => {\n    getTracks();\n    if(window.innerWidth < 800) {\n      setMobile(true);\n    }\n  }, [setAppState]);\n\n  window.addEventListener('resize', () => {\n    if(window.innerWidth < 800) {\n      setMobile(true);\n    } else {\n      setMobile(false);\n    }\n  });\n\n  return (\n    <div className=\"top-songs-wrapper\">\n      {appState.topSongs[0].name ?\n        <div className=\"top-songs\">\n          <div className=\"songs-header\">\n            <div className=\"songs-header-wrapper\">\n              <h2>You loved these songs the most.</h2>\n            </div>\n            </div>\n            <div className=\"songs-text-wrapper\">\n            { (mobile) ?\n              appState.topSongs.slice(0, 5).map((song, index) => {\n                return (\n                  <div className=\"song-wrapper\" key={index}>\n                    <div className=\"song-number\">\n                      <h3>{index + 1}</h3>\n                    </div>\n                    <div className=\"song-details\">\n                      <h3 className=\"song-details-title\">{song.name}</h3>\n                      <p className=\"song-details-artists\">{arrToList(song.artists, \"name\")}</p>\n                    </div>\n                  </div>\n                )\n              })\n              :\n              <p></p>\n            }\n            </div>\n            <div className=\"songs-wrapper\">\n              <div className=\"songs-3d\">\n              {appState.topSongs.slice(0,mobile ? 5 : 10).map((song, index) => {\n                return (\n                  <SongCover src={song.album.images[0].url} name={song.name} index={index} key={index} handleHover={() => handleHover(song.name, song.artists, index)} handleMouseLeave={() => handleHover('', [{}], 0)}/>\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"featured-song-container\">\n          {songDetails.name ?\n            <div className=\"featured-song\">\n              <h3 className=\"featured-song-number\">{songDetails.number + 1}</h3>\n              <h3 className=\"featured-song-title\">{songDetails.name}</h3>\n              <p className=\"featured-song-artist\">{arrToList(songDetails.artists, 'name')}</p>\n            </div>\n            :\n            <p></p>\n          }\n          </div>\n        </div>\n        :\n        <p>Loading...</p>\n      }\n    </div>\n  )\n}\n\n\nfunction SongCover(props) {\n  return (\n    <div className={\"song-cover \" + \"song-\" + props.index} onMouseOver={props.handleHover} onMouseLeave={props.handleMouseLeave}>\n      <img src={props.src} alt={props.name} />\n    </div>\n  );\n}\n\nexport default TopSongs;\n","import React, {useEffect, useState} from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport {sortGenres, propToArr, updateObj} from './analyzeData';\n\nfunction TopGenres(props) {\n  const [appState, setAppState] = useState({\n    genres: {}\n  });\n\n  let artists = [{}];\n\n  const spotifyApi = new SpotifyWebApi();\n  spotifyApi.setAccessToken(props.token);\n\n  const getArtists = () => {\n    let options = {time_range: props.timeframe};\n    spotifyApi.getMyTopArtists(options)\n      .then((response) => {\n        artists = response.items;\n        setAppState({genres: appState.genres});\n        analyzeGenres();\n      })\n  }\n\n  useEffect(() => {\n    getArtists();\n  }, [setAppState]);\n\n  const analyzeGenres = () => {\n    artists.forEach((artist) => {\n      if(artist.genres) {\n        artist.genres.forEach((g) => {\n          let obj = appState.genres;\n          updateObj(obj, g);\n          setAppState({genres: obj});\n        });\n      }\n    });\n    props.updateGenres(appState.genres);\n  }\n\n  const strGenres = (genres) => {\n    if(Object.keys(genres).length > 0) {\n      let newGenres = sortGenres(genres);\n      let arr = [];\n      let g = propToArr(newGenres, 5).map((genre, index) => <div className=\"genre-level\" key={index}><div className=\"genre-level-front\"><h3>{genre}</h3></div><div className=\"genre-level-side\"></div></div>);\n      arr[0] = g[4];\n      arr[1] = g[3];\n      arr[2] = g[1];\n      arr[3] = g[0];\n      arr[4] = g[2];\n      return arr;\n    } else {\n      return <p>N/A</p>;\n    }\n  }\n\n  return (\n    <div className=\"genres-wrapper\">\n      <div className=\"genres\">\n        <h2>Your Top Niche Genres</h2>\n        <p>Ever wondered what subgenres of music you listen to most often?</p>\n        <div className=\"genre-level-wrapper\">\n            {strGenres(appState.genres)} \n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TopGenres;\n","import React, {useEffect, useState} from 'react';\nimport Vibrant from 'node-vibrant';\n\nfunction CanvasGraphic(props) {\n  const [appState, setAppState] = useState({\n    palette: {}\n  });\n\n  const shortenString = (text, remove) => {\n  \tlet index = text.indexOf('(');\n  \tif(index > 0) return text.substring(0, index);\n\t\treturn text.substring(0, text.length-remove).concat('..');\n\t}\n\n  const getColor = () => {\n  \tlet src = '';\n  \tif(props.tracks) {\n\t\tsrc = props.artists[0].images[0].url || '';\n\t}\n  \tVibrant.from(src).getPalette(function(err, palette) {\n\t\tif(palette) {\n\t\t\tsetAppState({palette: palette});\n\t\t\tdrawCanvas(palette);\n\t\t}\n\t});\n  }\n\n  const drawCanvas = (palette) => {\n  \tlet c = document.getElementById(\"downloadable\");\n  \tc.width = c.clientWidth * 2\n\tc.height = c.clientHeight * 2\n  \tlet ctx = c.getContext(\"2d\");\n  \tif(window.innerWidth < 600) {\n  \t\tctx.scale(1.4, 1.4);\n  \t} else {\n  \t\tctx.scale(2, 2);\n  \t}\n\n  \tif(palette.DarkMuted) {\n  \t\tconst bgColor = palette.DarkMuted.getRgb();\n\t\tctx.fillStyle = 'rgb(' + bgColor[0] + ',' + bgColor[1] + ',' + bgColor[2] + ')';\n\t} else {\n\t\tctx.fillStyle = 'rgb(0,0,0)';\n\t}\n\tctx.fillRect(0, 0, c.width, c.height);\n\n\tctx.fillStyle = 'rgb(255,255,255)';\n\tctx.font = \"16px 'Circular Spotify'\";\n\n  \tif(palette.Vibrant) {\n  \t\tconst bgColor = palette.Vibrant.getRgb();\n\t\tctx.fillStyle = 'rgb(' + bgColor[0] + ',' + bgColor[1] + ',' + bgColor[2] + ')';\n\t} else {\n\t\tctx.fillStyle = 'rgb(226,28,164)';\n\t}\n\tctx.fillText('QUARANTINE WRAPPED', 270, 50);\n  \tctx.fillRect(30, 43, 230, 3);\n\n  \tconst image = new Image();\n  \timage.crossOrigin = 'Anonymous';\n  \tif(props.tracks) {\n\t\timage.src = props.artists[0].images[0].url || '';\n\t}\n\n\timage.onload = () => {\n\t\tif(image.naturalWidth < image.naturalHeight) {\n\t\t\tconst diff = (image.naturalHeight - image.naturalWidth) / 2;\n\t\t\tctx.drawImage(image, 0, diff, image.naturalWidth, image.naturalWidth, 290, 90, 140, 140);\n\t\t\tctx.drawImage(image, 0, diff, image.naturalWidth, image.naturalWidth, 280, 105, 160, 160);\n\t\t\tctx.drawImage(image, 0, diff, image.naturalWidth, image.naturalWidth, 265, 125, 190, 190);\n\t\t\tctx.drawImage(image, 0, diff, image.naturalWidth, image.naturalWidth, 250, 150, 220, 220);\n\t\t} else if(image.naturalWidth > image.naturalHeight) {\n\t\t\tconst diff = (image.naturalWidth - image.naturalHeight) / 2;\n\t\t\tctx.drawImage(image, diff, 0, image.naturalHeight, image.naturalHeight, 290, 90, 140, 140);\n\t\t\tctx.drawImage(image, diff, 0, image.naturalHeight, image.naturalHeight, 280, 105, 160, 160);\n\t\t\tctx.drawImage(image, diff, 0, image.naturalHeight, image.naturalHeight, 265, 125, 190, 190);\n\t\t\tctx.drawImage(image, diff, 0, image.naturalHeight, image.naturalHeight, 250, 150, 220, 220);\n\t\t} else {\n\t\t\tctx.drawImage(image, 290, 90, 140, 140);\n\t\t\tctx.drawImage(image, 280, 105, 160, 160);\n\t\t\tctx.drawImage(image, 265, 125, 190, 190);\n\t\t\tctx.drawImage(image, 250, 150, 220, 220);\n\t\t}\n\t};\n\n\tif(palette.LightVibrant) {\n  \t\tconst bgColor = palette.LightVibrant.getRgb();\n\t\tctx.fillStyle = 'rgb(' + bgColor[0] + ',' + bgColor[1] + ',' + bgColor[2] + ')';\n\t} else {\n\t\tctx.fillStyle = 'rgb(209,255,106)';\n\t}\n\n\tctx.font = \"18px 'Circular Spotify'\";\n\tctx.fillText('TOP ARTISTS', 30, 106);\n\tctx.fillStyle = 'rgb(255,255,255)';\n\tctx.font = \"20px 'Circular Spotify'\";\n\n\tfor(let i = 0; i < 5; i++) {\n\t\tif(props.artists[i] && Object.keys(props.artists[i]).length != 0) {\n\t\t\tlet name = props.artists[i].name;\n\t\t\tlet metrics = ctx.measureText(name);\n\t\t\tlet width = metrics.width;\n\t\t\tif(width > 200) {\n\t\t\t\tlet ratio = width/name.length;\n\t\t\t\tlet toRemove = Math.ceil((width-200)/ratio);\n\t\t\t\tname = shortenString(name, toRemove+1);\n\t\t\t}\n\t\t\twriteText(ctx, name, 30, 133 + i * 28);\n\t\t}\n\t}\n\n\tif(palette.LightVibrant) {\n  \t\tconst bgColor = palette.LightVibrant.getRgb();\n\t\tctx.fillStyle = 'rgb(' + bgColor[0] + ',' + bgColor[1] + ',' + bgColor[2] + ')';\n\t} else {\n\t\tctx.fillStyle = 'rgb(209,255,106)';\n\t}\n\n\tctx.font = \"18px 'Circular Spotify'\";\n\twriteText(ctx, 'TOP SONGS', 30, 320);\n\tctx.fillStyle = 'rgb(255,255,255)';\n\tctx.font = \"20px 'Circular Spotify'\";\n\n\tfor(let i = 0; i < 5; i++) {\n\t\tif(props.tracks[i]) {\n\t\t\tlet name = props.tracks[i].name;\n\t\t\tlet metrics = ctx.measureText(name);\n\t\t\tlet width = metrics.width;\n\t\t\tif(width > 200) {\n\t\t\t\tlet ratio = width/name.length;\n\t\t\t\tlet toRemove = Math.ceil((width-200)/ratio);\n\t\t\t\tname = shortenString(name, toRemove+1);\n\t\t\t}\n\t\t\twriteText(ctx, name, 30, 348 + i * 28);\n\t\t}\n\t}\n\n\tif(palette.LightVibrant) {\n  \t\tconst bgColor = palette.LightVibrant.getRgb();\n\t\tctx.fillStyle = 'rgb(' + bgColor[0] + ',' + bgColor[1] + ',' + bgColor[2] + ')';\n\t} else {\n\t\tctx.fillStyle = 'rgb(209,255,106)';\n\t}\n\tctx.font = \"18px 'Circular Spotify'\";\n\twriteText(ctx, 'TOP GENRE', 250, 430);\n\tctx.fillStyle = 'rgb(255,255,255)';\n\tctx.font = \"24px 'Circular Spotify'\";\n\tif(props.genres && props.genres[0][0]) {\n\t\tlet g = props.genres[0][0];\n\t\tlet topGenre = g.charAt(0).toUpperCase() + g.slice(1);\n\t\twriteText(ctx, topGenre, 250, 460);\n\t}\n\n\tif(palette.DarkVibrant) {\n  \t\tconst bgColor = palette.DarkVibrant.getRgb();\n\t\tctx.fillStyle = 'rgba(' + bgColor[0] + ',' + bgColor[1] + ',' + bgColor[2] + ', 50)';\n\t} else {\n\t\tctx.fillStyle = 'rgb(255,255,255,50)';\n\t}\n\tctx.font = \"12px 'Circular Spotify'\";\n\twriteText(ctx, 'bit.ly/quarantine-wrapped', 305, 66);\n  }\n\n  const writeText = (ctx, words, x, y) => {\n  \tctx.fillText(words, x, y);\n  }\n\n  const dlCanvas = () => {\n  \tlet canvas = document.getElementById(\"downloadable\");\n\tlet dt = canvas.toDataURL('image/png');\n\t/* Change MIME type to trick the browser to downlaod the file instead of displaying it */\n\tdt = dt.replace(/^data:image\\/[^;]*/, 'data:application/octet-stream');\n\n\t/* In addition to <a>'s \"download\" attribute, you can define HTTP-style headers */\n\tdt = dt.replace(/^data:application\\/octet-stream/, 'data:application/octet-stream;headers=Content-Disposition%3A%20attachment%3B%20filename=Canvas.png');\n\tvar link = document.createElement('a');\n  \tlink.download = 'quarantine-wrapped.png';\n  \tlink.href = dt;\n  \tlink.click();\n  }\n\n  useEffect(() => {\n    if(props.finished >= 3) {\n    \tgetColor();\n    }\n  }, [props.finished]);\n\n  return (\n    <div className='canvas-graphic-wrapper'>\n\t    <div className='canvas-graphic'>\n\t    \t<div className='canvas-title'>\n\t    \t\t<h1>Share with the world.</h1>\n\t    \t\t<h3>Or hide it away forever.</h3>\n\t    \t\t<h3>Your choice, really.</h3>\n\t    \t\t<button onClick={dlCanvas} className='download-btn'>Download</button>\n\t    \t</div>\n\t      <canvas id='downloadable' width='500' height='500'></canvas>\n      </div>\n    </div>\n  )\n}\n\nexport default CanvasGraphic;\n","import React, {useEffect, useState} from 'react';\n\nfunction Loading(props) {\n\treturn (\n\t\t<div className=\"loading\">\n\t\t\t{props.state === 0 ? \n\t\t\t\t<h2>Gathering your Spotify data...</h2>\n\t\t\t\t: \n\t\t\t\t<div>\n\t\t\t\t\t<h2>Looks like your authorization token has expired.</h2>\n\t\t\t\t\t<button><a href=\"/\">Try Again</a></button>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default Loading;","import React, {useEffect, useState} from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport TopArtists from './TopArtists';\nimport TopSongs from './TopSongs';\nimport TopGenres from './TopGenres';\nimport CanvasGraphic from './CanvasGraphic';\nimport {sortGenres, arrToList, propToArr} from './analyzeData';\nimport Div100vh from 'react-div-100vh';\nimport Loading from './Loading';\n\nfunction SummaryPage(props) {\n  const [appState, setAppState] = useState({\n    chosen: false,\n    timeframe: 2,\n    tracks: [{}]\n  });\n\n  const [artists, setArtists] = useState([{}]);\n\n  const [loaded, setLoaded] = useState(0);\n\n  const [genres, setGenres] = useState([{}]);\n\n  const [location, setLocation] = useState(1);\n\n  const [error, setError] = useState(0);\n\n  const spotifyApi = new SpotifyWebApi();\n  spotifyApi.setAccessToken(props.token);\n\n  const ranges = {\n    1: 'short_term',\n    2: 'medium_term',\n    3: 'long_term'\n  };\n\n  const colors = {\n    green: '#d1ff6a',\n    seagreen: '#48937e',\n    pink: '#e21ca4',\n    black: '#191414'\n  }\n\n  useEffect(() => {\n    //setAppState({timeframe:2});\n  }, [setAppState]);\n\n  const updateTimeframe = (time) => {\n    setAppState({...appState, timeframe: time, chosen: true});\n  }\n\n  const updateTracks = (newTracks) => {\n    setAppState({...appState, tracks: newTracks});\n    setLoaded(loaded => loaded + 1);\n  }\n\n  const updateArtists = (newArtists) => {\n    setArtists(newArtists);\n    setLoaded(loaded => loaded + 1);\n  }\n\n  const updateGenres = (newGenres) => {\n    let g = sortGenres(newGenres);\n    setGenres(g);\n    setLoaded(loaded => loaded + 1);\n  }\n\n  const handleScroll = () => {\n    var container = document.querySelector(\".full-height\");\n    let topSongs = document.querySelector('.top-songs-wrapper');\n    let topGenres = document.querySelector('.genres-wrapper');\n    let graphic = document.querySelector('.canvas-graphic-wrapper');\n    let bg = document.querySelector('.summary-bg');\n    if(container.scrollTop < topSongs.offsetTop - 500) {\n      bg.style.backgroundColor = colors.pink;\n      setLocation(1);\n    } else if(container.scrollTop >= topSongs.offsetTop - 500 && container.scrollTop < topGenres.offsetTop - 500) {\n      bg.style.backgroundColor = colors.black;\n      setLocation(2);\n    } else if(container.scrollTop >= topGenres.offsetTop - 500 && container.scrollTop < graphic.offsetTop - 500) {\n      bg.style.backgroundColor = colors.green;\n      setLocation(3);\n    } else if(container.scrollTop >= graphic.offsetTop - 500) {\n      bg.style.backgroundColor = colors.seagreen;\n      setLocation(4);\n    }\n  }\n\n  return (\n    <div className=\"summary\">\n    {\n      appState.chosen ?\n        <div>\n          {loaded < 3 ? \n            <Div100vh>\n              <Loading state={error} /> \n            </Div100vh>\n            : \n            <></>\n          }\n          <div className=\"credit\">Made with ♥ by <a href=\"https://clawang.github.io/\" id=\"credit-link\">Claire Wang</a>.</div>\n          <div className=\"navigation\"><p>{location} / 4</p></div>\n          <div className=\"summary-content\">\n            <Div100vh className=\"full-height\" onScroll={handleScroll}>\n              <TopArtists token={props.token} timeframe={ranges[appState.timeframe]} updateArtists={updateArtists} setError={setError} />\n              <TopSongs token={props.token} timeframe={ranges[appState.timeframe]} updateTracks={updateTracks}  />\n              <TopGenres token={props.token} timeframe={ranges[appState.timeframe]} updateGenres={updateGenres} />\n              <CanvasGraphic artists={artists} tracks={appState.tracks} genres={genres} finished={loaded} />\n            </Div100vh>\n          </div>\n          <div className=\"summary-bg\"></div>\n        </div>\n        :\n        <Div100vh>\n          <div className=\"time-selection\">\n            <h1>See data from the past:</h1>\n            <div className=\"time-selection-buttons\">\n              <button onClick={() => updateTimeframe(1)}>4 Weeks</button>\n              <button onClick={() => updateTimeframe(2)}>6 Months</button>\n              <button onClick={() => updateTimeframe(3)}>2 Years</button>\n            </div>\n          </div>\n        </Div100vh>\n      }\n    </div>\n      \n  )\n}\n\nexport default SummaryPage;\n","import React, {useEffect, useState} from 'react';\nimport './App.scss';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport PlaylistPage from './PlaylistPage';\nimport SummaryPage from './SummaryPage';\nimport Div100vh from 'react-div-100vh';\n\nfunction App() {\n  const [appState, setAppState] = useState({\n    loggedIn: false,\n    token: ''\n  });\n\n  const spotifyApi = new SpotifyWebApi();\n\n  const getHashParams = () => {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  useEffect(() => {\n    const params = getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    setAppState({loggedIn: token ? true : false, token: token});\n  }, [setAppState]);\n\n  return (\n    <div className='App'>\n      {appState.loggedIn ?\n        <div>\n          {<SummaryPage token={appState.token} />}\n          {/*<PlaylistPage token={appState.token} />*/}\n        </div>\n        :\n        <Div100vh>\n          <div className=\"start-screen\">\n            <div>\n              <div className=\"heading-1\"><h1>Ready for your</h1></div>\n              <div className=\"heading-2\"><h1>Quarantine Wrapped?</h1></div>\n              <div className=\"start-descrip\">\n                <h3 className=\"green\">Relive and discover the artists and music that have gotten you through.</h3>\n                <button><a href='/login'> Login to Spotify </a></button>\n              </div>\n              <p className=\"disclaimer\">* NOT affiliated with Spotify</p>\n            </div>\n          </div>\n        </Div100vh>\n      }\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}